# laut doku sollte das automatisch gesetzt werden, klappt aber nicht
quarkus.application.version=0.2.3

%dev.stage=dev
stage=prod

block.on.missing.origin.referer=false
heartbeat.id=heartbeat

%dev.target.origin: localhost:4200
target.origin: mathe-jung-alt.de

## authprovider
auth.client-id=NBptB82KjFkelkF55Aq4SmQSL3DXZHHurbe7l5W9LT7U
auth.client-secret=start123

authprovider.url=https://opa-wetterwachs.de/authprovider
%dev.authprovider.url=http://localhost:9000/authprovider

auth-app.url=https://opa-wetterwachs.de/auth-app
%dev.auth-app.url=http://localhost:4300

auth.redirect-url.login=https://mathe-jung-alt.de/mkadmin-app#/home
%dev.auth.redirect-url.login=http://localhost:4200#/home


## Rest-Client properties
%dev.de.egladil.web.mkadmin_server.restclient.OrderAccessTokenRestClient/mp-rest/url=http://localhost:9000/authprovider
de.egladil.web.mkadmin_server.restclient.OrderAccessTokenRestClient/mp-rest/url=https://opa-wetterwachs.de/authprovider

de.egladil.web.mkadmin_server.restclient.OrderAccessTokenRestClient/mp-rest/scope=javax.inject.Singleton

## the next 2 are actually ignored, see https://github.com/quarkusio/quarkus/issues/4338
%dev.de.egladil.web.mkadmin_server.restclient.OrderAccessTokenRestClient/mp-rest/connectTimeout=30000
de.egladil.web.mkadmin_server.restclient.OrderAccessTokenRestClient/mp-rest/connectTimeout=60000

%dev.de.egladil.web.mkadmin_server.restclient.OrderAccessTokenRestClient/mp-rest/readTimeout=1000
dev.de.egladil.web.mkadmin_server.restclient.OrderAccessTokenRestClient/mp-rest/readTimeout=120000

## DB-Properties
quarkus.datasource.driver=org.mariadb.jdbc.Driver
quarkus.datasource.url=jdbc:mysql://localhost:3306/mkverwaltung
# next 2 in PROD will be overridden by VM-args
quarkus.datasource.username=mkv
quarkus.datasource.password=hwinkel

quarkus.datasource.max-size=8
quarkus.datasource.min-size=2
quarkus.hibernate-orm.log.sql=false

# Logging
quarkus.log.category."de.egladil.web.mkadmin_server".level = INFO
quarkus.log.level=ERROR
quarkus.log.min-level=INFO

# Undertow
quarkus.http.cors=true
quarkus.http.cors.methods=OPTIONS,GET,PUT,POST,DELETE,HEAD
quarkus.http.cors.exposed-headers=Content-Type,Accept,Authorization,Origin,Content-Disposition,X-Requested-With

# Http
quarkus.http.port=9400
quarkus.resteasy.gzip.enabled=true
quarkus.resteasy.gzip.max-input=10M

# JWT
mp.jwt.verify.publickey.location=META-INF/authprov_public_key.pem
mp.jwt.verify.issuer=heike2718/authprovider

